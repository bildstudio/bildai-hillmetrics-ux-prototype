-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.calculation_history (
  calculationid integer NOT NULL DEFAULT nextval('calculation_history_calculationid_seq'::regclass),
  fluxid integer NOT NULL,
  refinementid integer,
  calculationtype text NOT NULL,
  status text NOT NULL,
  startedat timestamp with time zone NOT NULL,
  completedat timestamp with time zone,
  calculationtimeinseconds integer,
  errormessage text,
  CONSTRAINT calculation_history_pkey PRIMARY KEY (calculationid),
  CONSTRAINT calculation_history_fluxid_fkey FOREIGN KEY (fluxid) REFERENCES public.fluxdata(id),
  CONSTRAINT calculation_history_refinementid_fkey FOREIGN KEY (refinementid) REFERENCES public.refinement_history(refinementid)
);
CREATE TABLE public.calculation_result (
  resultid integer NOT NULL DEFAULT nextval('calculation_result_resultid_seq'::regclass),
  calculationid integer NOT NULL,
  datakey text,
  value numeric,
  createdat timestamp with time zone NOT NULL,
  CONSTRAINT calculation_result_pkey PRIMARY KEY (resultid),
  CONSTRAINT calculation_result_calculationid_fkey FOREIGN KEY (calculationid) REFERENCES public.calculation_history(calculationid)
);
CREATE TABLE public.content_items (
  contentID integer NOT NULL DEFAULT nextval('"content_items_contentID_seq"'::regclass),
  fetchingID integer NOT NULL,
  fluxID integer NOT NULL,
  contentName text,
  contentShortName text,
  description text,
  fileSize bigint,
  contentLength bigint,
  fileType character varying,
  mimeType character varying,
  encoding character varying,
  hash character,
  createdAt timestamp with time zone,
  modifiedAt timestamp with time zone,
  sourceUrl text,
  CONSTRAINT content_items_pkey PRIMARY KEY (contentID),
  CONSTRAINT fk_fluxdata_content FOREIGN KEY (fluxID) REFERENCES public.fluxdata(id),
  CONSTRAINT fk_fetchinghistory FOREIGN KEY (fetchingID) REFERENCES public.fetchinghistory(fetchingID)
);
CREATE TABLE public.fetchinghistory (
  fetchingID integer NOT NULL DEFAULT nextval('"fetchinghistory_fetchingID_seq"'::regclass),
  fluxID integer NOT NULL,
  status text NOT NULL,
  timestamp timestamp with time zone NOT NULL,
  completedAt timestamp with time zone,
  fetchingTimeInSeconds integer,
  progress real,
  numberOfContent integer,
  errorMessage text,
  CONSTRAINT fetchinghistory_pkey PRIMARY KEY (fetchingID),
  CONSTRAINT fk_fluxdata FOREIGN KEY (fluxID) REFERENCES public.fluxdata(id)
);
CREATE TABLE public.fluxdata (
  id integer NOT NULL DEFAULT nextval('fluxdata_id_seq'::regclass),
  name text NOT NULL,
  source text,
  fluxState text,
  comment text,
  description text,
  fetchScheduleType text,
  fetchScheduleConfiguration jsonb,
  processingScheduleType text,
  processingScheduleConfiguration jsonb,
  fetchingStatus text,
  processingStatus text,
  numberOfFetchingTimes integer DEFAULT 0,
  numberOfProcessingTimes integer DEFAULT 0,
  numberOfErrorFetching integer DEFAULT 0,
  numberOfErrorsProcessing integer DEFAULT 0,
  numberOfSuccessFetching integer DEFAULT 0,
  numberOfSuccessProcessing integer DEFAULT 0,
  numberOfCurrentlyFetching integer DEFAULT 0,
  numberOfCurrentlyProcessing integer DEFAULT 0,
  fetchingProgress real,
  processingProgress real,
  lastFetchingDate timestamp with time zone,
  lastProcessingDate timestamp with time zone,
  lastDurationFetching integer,
  lastDurationProcessing integer,
  createdAt timestamp with time zone NOT NULL,
  editedAt timestamp with time zone,
  financialType text,
  fluxType text,
  fluxTypeConfiguration jsonb,
  allowConcurrentMultiFetching boolean DEFAULT false,
  numberOfNormalizationTimes integer NOT NULL DEFAULT 0,
  numberOfSuccessNormalization integer NOT NULL DEFAULT 0,
  numberOfErrorsNormalization integer NOT NULL DEFAULT 0,
  numberOfCurrentlyNormalization integer NOT NULL DEFAULT 0,
  numberOfRefinementTimes integer NOT NULL DEFAULT 0,
  numberOfSuccessRefinement integer NOT NULL DEFAULT 0,
  numberOfErrorsRefinement integer NOT NULL DEFAULT 0,
  numberOfCurrentlyRefinement integer NOT NULL DEFAULT 0,
  numberOfCalculationTimes integer NOT NULL DEFAULT 0,
  numberOfSuccessCalculation integer NOT NULL DEFAULT 0,
  numberOfErrorsCalculation integer NOT NULL DEFAULT 0,
  numberOfCurrentlyCalculation integer NOT NULL DEFAULT 0,
  normalizationStatus text,
  normalizationProgress real,
  lastDurationNormalization integer,
  refinementStatus text,
  refinementProgress real,
  lastDurationRefinement integer,
  calculationStatus text,
  calculationProgress real,
  lastDurationCalculation integer,
  workflow_last_status text,
  workflow_last_progress real,
  workflow_last_duration integer,
  workflow_current_stage text,
  workflow_last_processed timestamp with time zone,
  workflow_runs integer NOT NULL DEFAULT 0,
  workflow_number_of_inprogress integer NOT NULL DEFAULT 0,
  workflow_number_of_success integer NOT NULL DEFAULT 0,
  workflow_number_of_errors integer NOT NULL DEFAULT 0,
  CONSTRAINT fluxdata_pkey PRIMARY KEY (id)
);
CREATE TABLE public.normalization_history (
  normalizationid integer NOT NULL DEFAULT nextval('normalization_history_normalizationid_seq'::regclass),
  fluxid integer NOT NULL,
  processingid integer,
  status text NOT NULL,
  startedat timestamp with time zone NOT NULL,
  completedat timestamp with time zone,
  progress real,
  normalizationtimeinseconds integer,
  errormessage text,
  CONSTRAINT normalization_history_pkey PRIMARY KEY (normalizationid),
  CONSTRAINT normalization_history_fluxid_fkey FOREIGN KEY (fluxid) REFERENCES public.fluxdata(id),
  CONSTRAINT normalization_history_processingid_fkey FOREIGN KEY (processingid) REFERENCES public.processinghistory(processingID)
);
CREATE TABLE public.normalization_stage_history (
  stageid integer NOT NULL DEFAULT nextval('normalization_stage_history_stageid_seq'::regclass),
  normalizationid integer NOT NULL,
  stagename text NOT NULL,
  status text NOT NULL,
  startedat timestamp with time zone NOT NULL,
  completedat timestamp with time zone,
  metadata jsonb,
  CONSTRAINT normalization_stage_history_pkey PRIMARY KEY (stageid),
  CONSTRAINT normalization_stage_history_normalizationid_fkey FOREIGN KEY (normalizationid) REFERENCES public.normalization_history(normalizationid)
);
CREATE TABLE public.normalized_content (
  normalizedid integer NOT NULL DEFAULT nextval('normalized_content_normalizedid_seq'::regclass),
  contentid integer NOT NULL,
  fluxid integer NOT NULL,
  normalizedvalue text,
  normalizedat timestamp with time zone NOT NULL,
  CONSTRAINT normalized_content_pkey PRIMARY KEY (normalizedid),
  CONSTRAINT normalized_content_fluxid_fkey FOREIGN KEY (fluxid) REFERENCES public.fluxdata(id),
  CONSTRAINT normalized_content_contentid_fkey FOREIGN KEY (contentid) REFERENCES public.content_items(contentID)
);
CREATE TABLE public.processing_content_history (
  processing_content_history_ID integer NOT NULL DEFAULT nextval('"processing_content_history_processing_content_history_ID_seq"'::regclass),
  processingID integer NOT NULL,
  contentID integer NOT NULL,
  processingStartTime timestamp with time zone,
  processingEndTime timestamp with time zone,
  processingTimeInSeconds integer,
  status text NOT NULL,
  statistics jsonb,
  CONSTRAINT processing_content_history_pkey PRIMARY KEY (processing_content_history_ID),
  CONSTRAINT fk_contentitems FOREIGN KEY (contentID) REFERENCES public.content_items(contentID),
  CONSTRAINT fk_processinghistory FOREIGN KEY (processingID) REFERENCES public.processinghistory(processingID)
);
CREATE TABLE public.processinghistory (
  processingID integer NOT NULL DEFAULT nextval('"processinghistory_processingID_seq"'::regclass),
  fluxID integer NOT NULL,
  fetchingID integer NOT NULL,
  status text NOT NULL,
  timestamp timestamp with time zone NOT NULL,
  completedAt timestamp with time zone,
  numberOfProcessingContent integer,
  processingTimeInSeconds integer,
  progress real,
  errorMessage text,
  CONSTRAINT processinghistory_pkey PRIMARY KEY (processingID),
  CONSTRAINT fk_fluxdata_processing FOREIGN KEY (fluxID) REFERENCES public.fluxdata(id),
  CONSTRAINT fk_fetchinghistory_processing FOREIGN KEY (fetchingID) REFERENCES public.fetchinghistory(fetchingID)
);
CREATE TABLE public.refined_data (
  refinedid integer NOT NULL DEFAULT nextval('refined_data_refinedid_seq'::regclass),
  normalizedid integer NOT NULL,
  fluxid integer NOT NULL,
  refinedvalue text,
  refinedat timestamp with time zone NOT NULL,
  CONSTRAINT refined_data_pkey PRIMARY KEY (refinedid),
  CONSTRAINT refined_data_normalizedid_fkey FOREIGN KEY (normalizedid) REFERENCES public.normalized_content(normalizedid),
  CONSTRAINT refined_data_fluxid_fkey FOREIGN KEY (fluxid) REFERENCES public.fluxdata(id)
);
CREATE TABLE public.refinement_history (
  refinementid integer NOT NULL DEFAULT nextval('refinement_history_refinementid_seq'::regclass),
  fluxid integer NOT NULL,
  normalizationid integer,
  status text NOT NULL,
  startedat timestamp with time zone NOT NULL,
  completedat timestamp with time zone,
  progress real,
  refinementtimeinseconds integer,
  errormessage text,
  CONSTRAINT refinement_history_pkey PRIMARY KEY (refinementid),
  CONSTRAINT refinement_history_fluxid_fkey FOREIGN KEY (fluxid) REFERENCES public.fluxdata(id),
  CONSTRAINT refinement_history_normalizationid_fkey FOREIGN KEY (normalizationid) REFERENCES public.normalization_history(normalizationid)
);
CREATE TABLE public.workflow_run (
  run_id integer NOT NULL DEFAULT nextval('workflow_run_run_id_seq'::regclass),
  flux_id integer NOT NULL,
  run_number integer NOT NULL,
  status text NOT NULL,
  started_at timestamp with time zone NOT NULL,
  completed_at timestamp with time zone,
  last_stage text,
  error_message text,
  CONSTRAINT workflow_run_pkey PRIMARY KEY (run_id),
  CONSTRAINT workflow_run_flux_id_fkey FOREIGN KEY (flux_id) REFERENCES public.fluxdata(id)
);
CREATE TABLE public.workflow_step (
  step_id integer NOT NULL DEFAULT nextval('workflow_step_step_id_seq'::regclass),
  run_id integer NOT NULL,
  parent_step_id integer,
  stage text NOT NULL,
  status text NOT NULL,
  action_type text NOT NULL,
  action_id integer NOT NULL,
  description text,
  timestamp timestamp with time zone NOT NULL,
  duration_ms integer,
  rows_added integer,
  rows_updated integer,
  rows_ignored integer,
  rows_error integer,
  metadata jsonb,
  progress real,
  CONSTRAINT workflow_step_pkey PRIMARY KEY (step_id),
  CONSTRAINT workflow_step_run_id_fkey FOREIGN KEY (run_id) REFERENCES public.workflow_run(run_id),
  CONSTRAINT workflow_step_parent_step_id_fkey FOREIGN KEY (parent_step_id) REFERENCES public.workflow_step(step_id)
);